
/**
 * 	Generated by mxmlc 2.0
 *
 *	Package:	
 *	Class: 		Main
 *	Source: 	/mikeworks/flex/blazeds/ex1/app-flex/src/main/flex/Main.mxml
 *	Template: 	flex2/compiler/mxml/gen/ClassDef.vm
 *	Time: 		2009.11.17 19:14:22 EST
 */

package 
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.filters.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.ControlBar;
import mx.containers.TabNavigator;
import mx.containers.VBox;
import mx.controls.Button;
import mx.controls.Label;
import mx.controls.Text;
import mx.controls.TextArea;
import mx.controls.TextInput;
import mx.core.Application;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.messaging.Consumer;
import mx.messaging.Producer;
import mx.messaging.events.MessageEvent;
import mx.rpc.events.ResultEvent;
import mx.rpc.remoting.mxml.Operation;
import mx.rpc.remoting.mxml.RemoteObject;
import mx.styles.*;


[SWF( heightPercent='100%', widthPercent='100%')]
[Frame(extraClass="_Main_FlexInit")]

[Frame(factoryClass="_Main_mx_managers_SystemManager")]


//	begin class def

public class Main
	extends mx.core.Application
	implements mx.binding.IBindingClient
{

	//	instance variables
	[Bindable]
/**
 * @private
 **/
	public var consumer : mx.messaging.Consumer;

	[Bindable]
/**
 * @private
 **/
	public var greetingText : mx.controls.Text;

	[Bindable]
/**
 * @private
 **/
	public var helloWorldService : mx.rpc.remoting.mxml.RemoteObject;

	[Bindable]
/**
 * @private
 **/
	public var log : mx.controls.TextArea;

	[Bindable]
/**
 * @private
 **/
	public var msg : mx.controls.TextInput;

	[Bindable]
/**
 * @private
 **/
	public var producer : mx.messaging.Producer;

	[Bindable]
/**
 * @private
 **/
	public var randomNumberService : mx.rpc.remoting.mxml.RemoteObject;

	[Bindable]
/**
 * @private
 **/
	public var randomNumbersList : mx.controls.TextArea;

	[Bindable]
/**
 * @private
 **/
	public var randomNumbersSize : mx.controls.Text;

	[Bindable]
/**
 * @private
 **/
	public var serverTimeText : mx.controls.Text;

	[Bindable]
/**
 * @private
 **/
	public var timeService : mx.rpc.remoting.mxml.RemoteObject;

	[Bindable]
/**
 * @private
 **/
	public var who : mx.controls.TextInput;


	//	type-import dummies


	//	Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.core.Application
  ,
  propertiesFactory: function():Object { return {
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.containers.VBox
        ,
        stylesFactory: function():void {
          this.horizontalAlign = "center";
          this.verticalAlign = "top";
        }
        ,
        propertiesFactory: function():Object { return {
          percentWidth: 70.0,
          percentHeight: 70.0,
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: mx.containers.TabNavigator
              ,
              propertiesFactory: function():Object { return {
                percentWidth: 100.0,
                percentHeight: 100.0,
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.containers.VBox
                    ,
                    stylesFactory: function():void {
                      this.horizontalAlign = "center";
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      label: "Hello Service",
                      childDescriptors: [
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Label
                          ,
                          propertiesFactory: function():Object { return {
                            text: "Enter your name:"
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.TextInput
                          ,
                          id: "who"
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Button
                          ,
                          events: {
                            click: "___Main_Button1_click"
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            label: "Say"
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Text
                          ,
                          id: "greetingText"
                        })
                      ]
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.containers.VBox
                    ,
                    stylesFactory: function():void {
                      this.horizontalAlign = "center";
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      label: "Time Service",
                      childDescriptors: [
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Button
                          ,
                          events: {
                            click: "___Main_Button2_click"
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            label: "Get Server Time"
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Text
                          ,
                          id: "serverTimeText"
                        })
                      ]
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.containers.VBox
                    ,
                    stylesFactory: function():void {
                      this.horizontalAlign = "center";
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      label: "Random Number Service",
                      childDescriptors: [
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Button
                          ,
                          events: {
                            click: "___Main_Button3_click"
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            label: "Get Random Numbers"
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Text
                          ,
                          id: "randomNumbersSize"
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.TextArea
                          ,
                          id: "randomNumbersList"
                        })
                      ]
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.containers.VBox
                    ,
                    stylesFactory: function():void {
                      this.horizontalAlign = "center";
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      label: "Chat Service",
                      childDescriptors: [
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.TextArea
                          ,
                          id: "log"
                          ,
                          propertiesFactory: function():Object { return {
                            width: 300,
                            height: 200
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.containers.ControlBar
                          ,
                          propertiesFactory: function():Object { return {
                            childDescriptors: [
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.TextInput
                                ,
                                id: "msg"
                                ,
                                events: {
                                  enter: "__msg_enter"
                                }
                                ,
                                propertiesFactory: function():Object { return {
                                  width: 300
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Button
                                ,
                                events: {
                                  click: "___Main_Button4_click"
                                }
                                ,
                                propertiesFactory: function():Object { return {
                                  label: "Send"
                                }}
                              })
                            ]
                          }}
                        })
                      ]
                    }}
                  })
                ]
              }}
            })
          ]
        }}
      })
    ]
  }}
})

	//	constructor (Flex display object)
    /**
     * @private
     **/
	public function Main()
	{
		super();

		mx_internal::_document = this;

		//	our style settings
		//	initialize component styles
		if (!this.styleDeclaration)
		{
			this.styleDeclaration = new CSSStyleDeclaration();
		}

		this.styleDeclaration.defaultFactory = function():void
		{
			this.horizontalAlign = "center";
			this.verticalAlign = "middle";
		};


		//	ambient styles
		mx_internal::_Main_StylesInit();

		//	properties
		this.layout = "vertical";
		this.styleName = "mike";
		_Main_Consumer1_i();
		_Main_RemoteObject1_i();
		_Main_Producer1_i();
		_Main_RemoteObject3_i();
		_Main_RemoteObject2_i();

		//	events
		this.addEventListener("creationComplete", ___Main_Application1_creationComplete);

	}

	//	initialize()
    /**
     * @private
     **/
	override public function initialize():void
	{
 		mx_internal::setDocumentDescriptor(_documentDescriptor_);

		var bindings:Array = _Main_bindingsSetup();
		var watchers:Array = [];

		var target:Main = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_MainWatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					bindings,
					watchers);

		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


		super.initialize();
	}

	//	scripts
	//	<Script>, line 57 - 102

          import mx.messaging.events.MessageEvent;
          import mx.messaging.messages.AsyncMessage;
          import mx.binding.utils.BindingUtils;
          import mx.messaging.channels.StreamingAMFChannel;
          import mx.rpc.events.ResultEvent;
          import mx.controls.Alert;
          import mx.collections.ArrayCollection;
            
            [Bindable]
            private var greeting : String;
            
            [Bindable]
            private var serverTime : Date;
            
            [Bindable]
            private var randomNumbers : ArrayCollection;
            
            private function onHelloEvent(event:ResultEvent):void {
                greeting = event.result as String;
            }
            
            private function onGetTimeEvent(event:ResultEvent):void {
            	serverTime = event.result as Date;
            }
            
            private function onGetRandomNumbers(event:ResultEvent):void {
              randomNumbers = event.result as ArrayCollection;
            }
            
            private function send():void {
            	var message:AsyncMessage = new AsyncMessage();
            	message.body.chatMessage = msg.text;
            	producer.send(message);
            	msg.text = "";
            }
            
            private function chatMessageHandler(event:MessageEvent):void {
            	log.text += event.message.body.chatMessage + "\n";
            }
            
            private function testit():void {
                trace("testit");
            }
            
        

	//	end scripts


    //	supporting function definitions for properties, events, styles, effects
private function _Main_Consumer1_i() : mx.messaging.Consumer
{
	var temp : mx.messaging.Consumer = new mx.messaging.Consumer();
	consumer = temp;
	temp.destination = "chat";
	temp.addEventListener("message", __consumer_message);
	temp.initialized(this, "consumer")
	return temp;
}

/**
 * @private
 **/
public function __consumer_message(event:mx.messaging.events.MessageEvent):void
{
	chatMessageHandler(event)
}

private function _Main_RemoteObject1_i() : mx.rpc.remoting.mxml.RemoteObject
{
	var temp : mx.rpc.remoting.mxml.RemoteObject = new mx.rpc.remoting.mxml.RemoteObject();
	helloWorldService = temp;
	temp.destination = "helloWorldService";
	temp.operations = {say: _Main_Operation1_c()};
	temp.initialized(this, "helloWorldService")
	return temp;
}

private function _Main_Operation1_c() : mx.rpc.remoting.mxml.Operation
{
	var temp : mx.rpc.remoting.mxml.Operation = new mx.rpc.remoting.mxml.Operation();
	temp.name = "say";
	temp.addEventListener("result", ___Main_Operation1_result);
	return temp;
}

/**
 * @private
 **/
public function ___Main_Operation1_result(event:mx.rpc.events.ResultEvent):void
{
	onHelloEvent(event)
}

private function _Main_Producer1_i() : mx.messaging.Producer
{
	var temp : mx.messaging.Producer = new mx.messaging.Producer();
	producer = temp;
	temp.destination = "chat";
	temp.initialized(this, "producer")
	return temp;
}

private function _Main_RemoteObject3_i() : mx.rpc.remoting.mxml.RemoteObject
{
	var temp : mx.rpc.remoting.mxml.RemoteObject = new mx.rpc.remoting.mxml.RemoteObject();
	randomNumberService = temp;
	temp.destination = "randomNumberService";
	temp.operations = {getNumbers: _Main_Operation3_c()};
	temp.initialized(this, "randomNumberService")
	return temp;
}

private function _Main_Operation3_c() : mx.rpc.remoting.mxml.Operation
{
	var temp : mx.rpc.remoting.mxml.Operation = new mx.rpc.remoting.mxml.Operation();
	temp.name = "getNumbers";
	temp.addEventListener("result", ___Main_Operation3_result);
	return temp;
}

/**
 * @private
 **/
public function ___Main_Operation3_result(event:mx.rpc.events.ResultEvent):void
{
	onGetRandomNumbers(event)
}

private function _Main_RemoteObject2_i() : mx.rpc.remoting.mxml.RemoteObject
{
	var temp : mx.rpc.remoting.mxml.RemoteObject = new mx.rpc.remoting.mxml.RemoteObject();
	timeService = temp;
	temp.destination = "timeService";
	temp.operations = {getTime: _Main_Operation2_c()};
	temp.initialized(this, "timeService")
	return temp;
}

private function _Main_Operation2_c() : mx.rpc.remoting.mxml.Operation
{
	var temp : mx.rpc.remoting.mxml.Operation = new mx.rpc.remoting.mxml.Operation();
	temp.name = "getTime";
	temp.addEventListener("result", ___Main_Operation2_result);
	return temp;
}

/**
 * @private
 **/
public function ___Main_Operation2_result(event:mx.rpc.events.ResultEvent):void
{
	onGetTimeEvent(event)
}

/**
 * @private
 **/
public function ___Main_Application1_creationComplete(event:mx.events.FlexEvent):void
{
	consumer.subscribe()
}

/**
 * @private
 **/
public function ___Main_Button1_click(event:flash.events.MouseEvent):void
{
	{helloWorldService.say(who.text)}
}

/**
 * @private
 **/
public function ___Main_Button2_click(event:flash.events.MouseEvent):void
{
	{timeService.getTime()}
}

/**
 * @private
 **/
public function ___Main_Button3_click(event:flash.events.MouseEvent):void
{
	{randomNumberService.getNumbers(5)}
}

/**
 * @private
 **/
public function __msg_enter(event:mx.events.FlexEvent):void
{
	send()
}

/**
 * @private
 **/
public function ___Main_Button4_click(event:flash.events.MouseEvent):void
{
	send()
}


	//	binding mgmt
    private function _Main_bindingsSetup():Array
    {
        var result:Array = [];
        var binding:Binding;

        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (greeting);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                greetingText.text = _sourceFunctionReturnValue;
            },
            "greetingText.text");
        result[0] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (serverTime);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                serverTimeText.text = _sourceFunctionReturnValue;
            },
            "serverTimeText.text");
        result[1] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (randomNumbers.length);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                randomNumbersSize.text = _sourceFunctionReturnValue;
            },
            "randomNumbersSize.text");
        result[2] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (randomNumbers);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                randomNumbersList.text = _sourceFunctionReturnValue;
            },
            "randomNumbersList.text");
        result[3] = binding;

        return result;
    }

    private function _Main_bindingExprs():void
    {
        var destination:*;
		[Binding(id='0')]
		destination = (greeting);
		[Binding(id='1')]
		destination = (serverTime);
		[Binding(id='2')]
		destination = (randomNumbers.length);
		[Binding(id='3')]
		destination = (randomNumbers);
    }

    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil):void
    {
        (Main)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil;

	//	initialize style defs for Main

	mx_internal static var _Main_StylesInit_done:Boolean = false;

	mx_internal function _Main_StylesInit():void
	{
		//	only add our style defs to the StyleManager once
		if (mx_internal::_Main_StylesInit_done)
			return;
		else
			mx_internal::_Main_StylesInit_done = true;

		var style:CSSStyleDeclaration;
		var effects:Array;

		// TabNavigator
		style = StyleManager.getStyleDeclaration("TabNavigator");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration("TabNavigator", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.backgroundColor = 0xaaaaff;
			};
		}
		// Application
		style = StyleManager.getStyleDeclaration("Application");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration("Application", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.backgroundColor = 0x222266;
				this.backgroundGradientColors = [0x6666aa, 0x222244];
			};
		}
		// mike
		style = StyleManager.getStyleDeclaration(".mike");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration(".mike", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.paddingTop = 0;
				this.backgroundColor = 0x222266;
				this.backgroundImage = "";
				this.horizontalAlign = "left";
				this.paddingLeft = 0;
				this.paddingBottom = 0;
				this.paddingRight = 0;
			};
		}

		StyleManager.mx_internal::initProtoChainRoots();
	}


	//	embed carrier vars
	//	end embed carrier vars

	//	binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//	end class def
}

//	end package def
}
