<?xml version="1.0" encoding="utf-8"?>
<EventMap 
    xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns="http://mate.asfusion.com/"
    >
    
    <mx:Producer id="chatProducer" destination="chat" />
    
    <mx:Script>
        <![CDATA[
            import mx.messaging.Producer;
            import mx.events.FlexEvent;
            
            import view.MainPanel;
            import manager.MainManager;
            import events.SimpleEvent;
            import mx.messaging.events.MessageFaultEvent;
            import mx.messaging.messages.AsyncMessage;
            
            // private var chatProducer:Producer;
            
            private function onCreationComplete():void {
                trace('MainEventMap.onCreationComplete');
                // chatProducer = new Producer();
                // chatProducer.destination = "chat";
                chatProducer.addEventListener(MessageFaultEvent.FAULT, onFaultSendChatMessage);
            }
            
            private function sendChatMessage(chatMessage:String):void {
                trace('MainEventMap.sendChatMessage');
                var asyncMessage:AsyncMessage = new AsyncMessage();
                asyncMessage.body = chatMessage;
                chatProducer.send(asyncMessage);
            }
            
            private function onFaultSendChatMessage(faultEvent:MessageFaultEvent):void {
                trace("onSendChatFault - Error: " + faultEvent.message.toString());
            }
            
            private function onFaultReceiveChatMessage(object:Object):void {
                trace("onFaultReceiveChatMessage: " + object);
            }
            
        ]]>
    </mx:Script>
    
    <!-- Debugger __________________________________________________________________ -->
    <!-- remove during production. This tag can be placed here or in your main application -->
    
    <Debugger level="{Debugger.ALL}" />
    
    <EventHandlers type="{FlexEvent.CREATION_COMPLETE}" debug="true">
         <InlineInvoker method="onCreationComplete"/>
    </EventHandlers>
    
    <!-- SAY HELLO -->
    
    <EventHandlers type="{SimpleEvent.SAY_HELLO}" debug="true">
        <RemoteObjectInvoker destination="helloWorldService" 
                             method="say"
                             arguments="{event.who}"
                             debug="true">
            <resultHandlers>
                <MethodInvoker generator="{MainManager}" 
                               method="setGreeting"
                               arguments="{resultObject}"/>
            </resultHandlers>
            <faultHandlers>
                <MethodInvoker generator="{MainManager}"
                               method="onFaultGreeting"
                               arguments="{resultObject}" />
            </faultHandlers>
        </RemoteObjectInvoker>
    </EventHandlers>
    
    <!-- SEND CHAT MESSAGE -->
    
    <EventHandlers type="{SimpleEvent.SEND_CHAT_MESSAGE}" debug="true">
        <InlineInvoker method="sendChatMessage" arguments="{event.chatMessage}"/>
    </EventHandlers>
    
    <EventHandlers type="{SimpleEvent.GET_RANDOM_NUMBERS}" debug="true">
        <RemoteObjectInvoker destination="randomNumberService" 
                             method="getNumbers"
                             arguments="{event.quantity}"
                             debug="true">
            <resultHandlers>
                <MethodInvoker generator="{MainManager}" 
                               method="setRandomNumbers"
                               arguments="{resultObject}"/>
            </resultHandlers>
            <faultHandlers>
                <MethodInvoker generator="{MainManager}"
                               method="onFaultRandomNumbers"
                               arguments="{resultObject}" />
            </faultHandlers>
        </RemoteObjectInvoker>
    </EventHandlers>
    
    <!-- RECEIVE CHAT MESSAGE -->
    
    <MessageHandlers destination="chat" debug="true">
        <EventAnnouncer generator="{SimpleEvent}"
                        type="{SimpleEvent.CHAT_MESSAGE_RECEIVED}">
            <Properties chatMessage="{message.body}" />
        </EventAnnouncer>

        <faultHandlers>
            <InlineInvoker method="onFaultReceiveChatMessage" arguments="{message}"/>
        </faultHandlers>

    </MessageHandlers>
    
    
    <!-- Injectors __________________________________________________________________ -->
    
    <Injectors target="{MainPanel}">
        <PropertyInjector targetKey="serverTime" source="{MainManager}" sourceKey="serverTime" />
        <PropertyInjector targetKey="greeting" source="{MainManager}" sourceKey="greeting" />
        <PropertyInjector targetKey="randomNumbers" source="{MainManager}" sourceKey="randomNumbers" />
        <ListenerInjector eventType="{SimpleEvent.CHAT_MESSAGE_RECEIVED}" method="chatMessageHandler" />
    </Injectors>
    
</EventMap>
